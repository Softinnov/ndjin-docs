#summary One-sentence summary of this page.

= Introduction =

By reading this tutorial you'll learn how to create a basic application model and interact with it using only your browser javascript.


= Create your model =

Include our simple model library.
{{{
<script type="text/javascript" src="model.js"></script>
}}}

Initialize model instance proxy that will permform webservice requests to the server and provide your application domain name.
{{{
var applicationDomainName = "your-application-domain-name";
var model = new Model( applicationDomainName, false );
model.init();
}}}

Create a 'Contact' class that extends 'Object' class. 'Contact' will have 'name' text field and a 'phone' text field.
{{{
var dataType = {
        name: "Contact",
        inheritedDataTypeId: model.getDataTypeByName( 'Object' )._id,
        fields: [
                { name: 'name', dataTypeId: model.getDataTypeByName( 'Text' )._id, min: 0, max: 1, unique: false, preview: true },
                { name: 'phone', dataTypeId: model.getDataTypeByName( 'Text' )._id, min: 0, max: 1, unique: false, preview: false },
        ]
}
model.createOrUpdateDataType( dataType );
}}}


Create a collection of 'Contacts' to your 'Application class'. 'Application' class will live as singleton and run as the main entry point of you application.
{{{
var applicationDataType = model.getDataTypeByName( 'Application' );
applicationDataType.fields.push( { name: 'contacts', dataTypeId: model.getDataTypeByName( 'Contact' )._id, min: 0, max: 100, unique: false, preview: false } );
model.createOrUpdateDataType( applicationDataType );
}}}
