<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="creationCompleteHandler()" xmlns:ui="net.ndjin.ecommerce.ui.*" xmlns:view="net.ndjin.ecommerce.view.*">

<mx:Script>
	<![CDATA[
		import net.ndjin.ecommerce.controller.ProductTypeController;
		import net.ndjin.ecommerce.controller.AuthenticationController;
		import org.swizframework.Swiz;
		import net.ndjin.ecommerce.ApplicationLanguage;
		import net.ndjin.ecommerce.model.ProductSpecific;
		import net.ndjin.ecommerce.model.Product;
		import net.ndjin.ecommerce.controller.ProductController;
		import net.ndjin.ecommerce.controller.CategoryController;
	
		[Bindable]
		[Autowire(bean="productController")]
		public var productController:ProductController;

		[Bindable]
		[Autowire(bean="categoryController")]
		public var categoryController:CategoryController;


		[Bindable]
		[Autowire(bean="authenticationController")]
		public var authenticationController:AuthenticationController;

	
		
		[Bindable(event='selectedProduct')]
		private function set selectedProduct( product:Product ):void
		{
			productController.selectedProduct = product;
		}
		private function get selectedProduct():Product
		{
			return productController.selectedProduct;
		}
		
		[Bindable(event='selectedProductSpecific')]
		private var selectedProductSpecific:ProductSpecific;
		
		private var productDetailIndex:Number;
		
		private var uploadedFileNames:Array = [];
	
	
		private function creationCompleteHandler():void
		{
			Swiz.addEventListener( ProductController.SELECTED_PRODUCT_EVENT, function( event:Event ):void
			{
				
				if( productController.selectedProduct != null )
				{
					productForm.visible = true;
					productSpecificDataGrid.dataProvider = productController.selectedProduct.productSpecifics;
					productDetailIndex = 0;
					productSpecificDataGrid.selectedIndex = productDetailIndex;
				}
				else
				{
					productDataGrid.selectedIndex = -1;
					productForm.visible = false;
				}
				dispatchEvent(new Event('selectedProduct') );
			});
			
			Swiz.addEventListener( ApplicationLanguage.DATA_LANGUAGE_UPDATED, function( event:Event ):void
			{
				productDataGrid.invalidateList();
				productSpecificDataGrid.invalidateList();
				
				
				dispatchEvent(new Event('selectedProduct') );
				
			});
		}
		
	
		private function uploadCompleteHandler(event:Event):void
		{
			uploadedFileNames.push( fileUpload.fileName );
			authenticationController.getUploadedFilesURL(uploadedFileNames);
			
			uploadBox.visible = false;
			uploadBox.width = 0;
	
	        uploadProgress.setProgress(0, 100);
	        cancelUpload.enabled = false;
		}
		
		private function newProduct():void
		{
			productDataGrid.selectedIndex = -1;
			productController.createNew();
		}
		
		
		private function productTypeValueLabel( item:Object, column:DataGridColumn ):String
		{
			if( item != null && item.value ) return item.value.name;
			return null;
		}
		
		// selectedProduct=productDataGrid.selectedItem as Product
	]]>
</mx:Script>
	
	
	<mx:HBox width="100%">
		<mx:DataGrid id="productDataGrid" dataProvider="{productController.products}" width="100%" height="100%" rowCount="5"
			change="productController.edit( productDataGrid.selectedItem as Product )"
			updateComplete="productSpecificDataGrid.selectedIndex=productDetailIndex"
			>
			<mx:columns>
				<mx:DataGridColumn headerText="Name" dataField="name" />
				<mx:DataGridColumn headerText="State" dataField="state" width="50"/>
			</mx:columns>
		</mx:DataGrid>
		
		<mx:VBox width="100%">


			<mx:Form id="productForm" width="100%" visible="false">
				<mx:FormItem label="Categories" width="100%">
					<ui:DoubleList sourceDataProvider="{categoryController.categories}" targetDataProvider="{selectedProduct.categories}"
						 labelField="name" idField="_id"/>
				</mx:FormItem>
				<mx:FormItem label="Product References">
					<mx:List id="productSpecificDataGrid" width="100" rowCount="3"
						change="
						productDetailIndex = productSpecificDataGrid.selectedIndex;
						selectedProductSpecific=productSpecificDataGrid.selectedItem as ProductSpecific;
						dispatchEvent(new Event('selectedProductSpecific') );"
	
						valueCommit="
						selectedProductSpecific=productSpecificDataGrid.selectedItem as ProductSpecific;
						dispatchEvent(new Event('selectedProductSpecific') );"
						
						labelField="reference"
						/>						
				</mx:FormItem>

				<mx:FormItem label="Reference">
					<mx:TextInput text="{selectedProductSpecific.reference}" 
						change="selectedProductSpecific.reference = (event.currentTarget as TextInput).text"/>
				</mx:FormItem>

				<mx:FormItem label="Common Name">
					<mx:TextInput text="{selectedProduct.name}"
						change="selectedProduct.name = (event.currentTarget as TextInput).text; productController.products.itemUpdated(selectedProduct)"/>
				</mx:FormItem>
				<mx:FormItem label="Common Description">
					<mx:TextArea text="{selectedProduct.description}"/>
				</mx:FormItem>
				<mx:FormItem label="Specific Description">
					<mx:TextArea text="{selectedProductSpecific.description}"/>
				</mx:FormItem>

				<mx:FormItem label="Pictures">
					<mx:List dataProvider="{authenticationController.uploadedFilesURL}" 
						rowCount="3" rowHeight="50"	width="100"
						itemRenderer="net.ndjin.ecommerce.ui.SimpleImageItemRenderer" />

						
					<ui:FileUpload id="fileUpload" url="{Beans.baseURL}/upload"
						 creationComplete="fileUpload.init(uploadBox, uploadProgress, cancelUpload, uploadCompleteHandler);" />
						 
						 
					<mx:HBox>
						<mx:Button id="startUpload" label="Upload..." click="fileUpload.startUpload();" />
						<mx:HBox id="uploadBox" visible="false" width="0">
							<mx:Button id="cancelUpload" label="Cancel" click="fileUpload.cancelUpload();" enabled="false" />
							<mx:Box verticalAlign="middle">
								<mx:ProgressBar id="uploadProgress" mode="manual" width="100"/>
							</mx:Box>
						</mx:HBox>
					</mx:HBox>
				
				</mx:FormItem>
				
				<mx:FormItem label="Tax" textAlign="right">
					<mx:TextInput text="{selectedProduct.tax}"/>
				</mx:FormItem>
				
				<mx:FormItem label="Price" textAlign="right">
					<mx:TextInput text="{selectedProductSpecific.price}"/>
				</mx:FormItem>


				<mx:FormItem label="Options" width="100%">
					<view:ProductOptionSelector id="productOptionSelector" productOptions="{selectedProductSpecific.productOptions}"/>
				</mx:FormItem>

				
				<mx:FormItem width="100%">
					<mx:HBox>
						<mx:Button label="Update" click="productController.load()"/>
						<mx:Button label="Cancel" click="productController.cancel( productDataGrid.selectedItem as Product )"/>
						<mx:Button label="Delete" click="productController.load()"/>
					</mx:HBox>
				</mx:FormItem>
			</mx:Form>
			
		</mx:VBox>
		
		
	</mx:HBox>
	
	
	
	
	<mx:HBox>
		<mx:Button label="New" click="newProduct()" visible="{!productForm.visible}"/>
	</mx:HBox>
</mx:VBox>
